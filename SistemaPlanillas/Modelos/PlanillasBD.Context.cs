//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SistemaPlanillas.Modelos
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class PlanillasEntities : DbContext
    {
        public PlanillasEntities()
            : base("name=PlanillasEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<Nullable<decimal>> RetornaSalarios(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("RetornaSalarios", idParameter);
        }
    
        public virtual ObjectResult<RetornaTurno_Result> RetornaTurno(string nombreTurno)
        {
            var nombreTurnoParameter = nombreTurno != null ?
                new ObjectParameter("nombreTurno", nombreTurno) :
                new ObjectParameter("nombreTurno", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RetornaTurno_Result>("RetornaTurno", nombreTurnoParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_CalculaInserta(Nullable<int> idColaborador, Nullable<int> diasLaborados, Nullable<int> idTurno, Nullable<decimal> horasExtras, Nullable<decimal> seguroSocial, Nullable<decimal> impuestoRenta, Nullable<decimal> asociacion, Nullable<int> otrosRebajos, Nullable<decimal> totalPago, Nullable<decimal> vacaciones, Nullable<decimal> aguinaldo, Nullable<decimal> cesantia, Nullable<System.DateTime> fechaPago)
        {
            var idColaboradorParameter = idColaborador.HasValue ?
                new ObjectParameter("idColaborador", idColaborador) :
                new ObjectParameter("idColaborador", typeof(int));
    
            var diasLaboradosParameter = diasLaborados.HasValue ?
                new ObjectParameter("diasLaborados", diasLaborados) :
                new ObjectParameter("diasLaborados", typeof(int));
    
            var idTurnoParameter = idTurno.HasValue ?
                new ObjectParameter("idTurno", idTurno) :
                new ObjectParameter("idTurno", typeof(int));
    
            var horasExtrasParameter = horasExtras.HasValue ?
                new ObjectParameter("horasExtras", horasExtras) :
                new ObjectParameter("horasExtras", typeof(decimal));
    
            var seguroSocialParameter = seguroSocial.HasValue ?
                new ObjectParameter("SeguroSocial", seguroSocial) :
                new ObjectParameter("SeguroSocial", typeof(decimal));
    
            var impuestoRentaParameter = impuestoRenta.HasValue ?
                new ObjectParameter("impuestoRenta", impuestoRenta) :
                new ObjectParameter("impuestoRenta", typeof(decimal));
    
            var asociacionParameter = asociacion.HasValue ?
                new ObjectParameter("Asociacion", asociacion) :
                new ObjectParameter("Asociacion", typeof(decimal));
    
            var otrosRebajosParameter = otrosRebajos.HasValue ?
                new ObjectParameter("otrosRebajos", otrosRebajos) :
                new ObjectParameter("otrosRebajos", typeof(int));
    
            var totalPagoParameter = totalPago.HasValue ?
                new ObjectParameter("totalPago", totalPago) :
                new ObjectParameter("totalPago", typeof(decimal));
    
            var vacacionesParameter = vacaciones.HasValue ?
                new ObjectParameter("Vacaciones", vacaciones) :
                new ObjectParameter("Vacaciones", typeof(decimal));
    
            var aguinaldoParameter = aguinaldo.HasValue ?
                new ObjectParameter("Aguinaldo", aguinaldo) :
                new ObjectParameter("Aguinaldo", typeof(decimal));
    
            var cesantiaParameter = cesantia.HasValue ?
                new ObjectParameter("Cesantia", cesantia) :
                new ObjectParameter("Cesantia", typeof(decimal));
    
            var fechaPagoParameter = fechaPago.HasValue ?
                new ObjectParameter("fechaPago", fechaPago) :
                new ObjectParameter("fechaPago", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CalculaInserta", idColaboradorParameter, diasLaboradosParameter, idTurnoParameter, horasExtrasParameter, seguroSocialParameter, impuestoRentaParameter, asociacionParameter, otrosRebajosParameter, totalPagoParameter, vacacionesParameter, aguinaldoParameter, cesantiaParameter, fechaPagoParameter);
        }
    
        public virtual int sp_CalculaModifica(Nullable<int> idRegistro, Nullable<int> idColaborador, Nullable<int> diasLaborados, Nullable<int> idTurno, Nullable<decimal> horasExtras, Nullable<decimal> seguroSocial, Nullable<decimal> impuestoRenta, Nullable<decimal> asociacion, Nullable<int> otrosRebajos, Nullable<decimal> totalPago, Nullable<decimal> vacaciones, Nullable<decimal> aguinaldo, Nullable<decimal> cesantia, Nullable<System.DateTime> fechaPago)
        {
            var idRegistroParameter = idRegistro.HasValue ?
                new ObjectParameter("idRegistro", idRegistro) :
                new ObjectParameter("idRegistro", typeof(int));
    
            var idColaboradorParameter = idColaborador.HasValue ?
                new ObjectParameter("idColaborador", idColaborador) :
                new ObjectParameter("idColaborador", typeof(int));
    
            var diasLaboradosParameter = diasLaborados.HasValue ?
                new ObjectParameter("diasLaborados", diasLaborados) :
                new ObjectParameter("diasLaborados", typeof(int));
    
            var idTurnoParameter = idTurno.HasValue ?
                new ObjectParameter("idTurno", idTurno) :
                new ObjectParameter("idTurno", typeof(int));
    
            var horasExtrasParameter = horasExtras.HasValue ?
                new ObjectParameter("horasExtras", horasExtras) :
                new ObjectParameter("horasExtras", typeof(decimal));
    
            var seguroSocialParameter = seguroSocial.HasValue ?
                new ObjectParameter("SeguroSocial", seguroSocial) :
                new ObjectParameter("SeguroSocial", typeof(decimal));
    
            var impuestoRentaParameter = impuestoRenta.HasValue ?
                new ObjectParameter("impuestoRenta", impuestoRenta) :
                new ObjectParameter("impuestoRenta", typeof(decimal));
    
            var asociacionParameter = asociacion.HasValue ?
                new ObjectParameter("Asociacion", asociacion) :
                new ObjectParameter("Asociacion", typeof(decimal));
    
            var otrosRebajosParameter = otrosRebajos.HasValue ?
                new ObjectParameter("otrosRebajos", otrosRebajos) :
                new ObjectParameter("otrosRebajos", typeof(int));
    
            var totalPagoParameter = totalPago.HasValue ?
                new ObjectParameter("totalPago", totalPago) :
                new ObjectParameter("totalPago", typeof(decimal));
    
            var vacacionesParameter = vacaciones.HasValue ?
                new ObjectParameter("Vacaciones", vacaciones) :
                new ObjectParameter("Vacaciones", typeof(decimal));
    
            var aguinaldoParameter = aguinaldo.HasValue ?
                new ObjectParameter("Aguinaldo", aguinaldo) :
                new ObjectParameter("Aguinaldo", typeof(decimal));
    
            var cesantiaParameter = cesantia.HasValue ?
                new ObjectParameter("Cesantia", cesantia) :
                new ObjectParameter("Cesantia", typeof(decimal));
    
            var fechaPagoParameter = fechaPago.HasValue ?
                new ObjectParameter("fechaPago", fechaPago) :
                new ObjectParameter("fechaPago", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CalculaModifica", idRegistroParameter, idColaboradorParameter, diasLaboradosParameter, idTurnoParameter, horasExtrasParameter, seguroSocialParameter, impuestoRentaParameter, asociacionParameter, otrosRebajosParameter, totalPagoParameter, vacacionesParameter, aguinaldoParameter, cesantiaParameter, fechaPagoParameter);
        }
    
        public virtual int sp_CalculaReserva(Nullable<int> idColaborador, Nullable<decimal> vacaciones, Nullable<decimal> aguinaldo, Nullable<decimal> cesantia)
        {
            var idColaboradorParameter = idColaborador.HasValue ?
                new ObjectParameter("idColaborador", idColaborador) :
                new ObjectParameter("idColaborador", typeof(int));
    
            var vacacionesParameter = vacaciones.HasValue ?
                new ObjectParameter("Vacaciones", vacaciones) :
                new ObjectParameter("Vacaciones", typeof(decimal));
    
            var aguinaldoParameter = aguinaldo.HasValue ?
                new ObjectParameter("Aguinaldo", aguinaldo) :
                new ObjectParameter("Aguinaldo", typeof(decimal));
    
            var cesantiaParameter = cesantia.HasValue ?
                new ObjectParameter("Cesantia", cesantia) :
                new ObjectParameter("Cesantia", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CalculaReserva", idColaboradorParameter, vacacionesParameter, aguinaldoParameter, cesantiaParameter);
        }
    
        public virtual int sp_ColaboradorElimina(Nullable<int> idColaborador)
        {
            var idColaboradorParameter = idColaborador.HasValue ?
                new ObjectParameter("idColaborador", idColaborador) :
                new ObjectParameter("idColaborador", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ColaboradorElimina", idColaboradorParameter);
        }
    
        public virtual int sp_ColaboradorInserta(Nullable<int> cedula, string nombre, string primer_Apellido, string segundo_Apellido, string genero, string correoElectronico, string direccionFisica, Nullable<decimal> telefono, Nullable<System.DateTime> fechaIngreso, Nullable<decimal> salarioBase)
        {
            var cedulaParameter = cedula.HasValue ?
                new ObjectParameter("cedula", cedula) :
                new ObjectParameter("cedula", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var primer_ApellidoParameter = primer_Apellido != null ?
                new ObjectParameter("Primer_Apellido", primer_Apellido) :
                new ObjectParameter("Primer_Apellido", typeof(string));
    
            var segundo_ApellidoParameter = segundo_Apellido != null ?
                new ObjectParameter("Segundo_Apellido", segundo_Apellido) :
                new ObjectParameter("Segundo_Apellido", typeof(string));
    
            var generoParameter = genero != null ?
                new ObjectParameter("Genero", genero) :
                new ObjectParameter("Genero", typeof(string));
    
            var correoElectronicoParameter = correoElectronico != null ?
                new ObjectParameter("CorreoElectronico", correoElectronico) :
                new ObjectParameter("CorreoElectronico", typeof(string));
    
            var direccionFisicaParameter = direccionFisica != null ?
                new ObjectParameter("direccionFisica", direccionFisica) :
                new ObjectParameter("direccionFisica", typeof(string));
    
            var telefonoParameter = telefono.HasValue ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(decimal));
    
            var fechaIngresoParameter = fechaIngreso.HasValue ?
                new ObjectParameter("FechaIngreso", fechaIngreso) :
                new ObjectParameter("FechaIngreso", typeof(System.DateTime));
    
            var salarioBaseParameter = salarioBase.HasValue ?
                new ObjectParameter("SalarioBase", salarioBase) :
                new ObjectParameter("SalarioBase", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ColaboradorInserta", cedulaParameter, nombreParameter, primer_ApellidoParameter, segundo_ApellidoParameter, generoParameter, correoElectronicoParameter, direccionFisicaParameter, telefonoParameter, fechaIngresoParameter, salarioBaseParameter);
        }
    
        public virtual int sp_ColaboradorModifica(Nullable<int> idColaborador, Nullable<int> cedula, string nombre, string primer_Apellido, string segundo_Apellido, string genero, string correoElectronico, string direccionFisica, Nullable<decimal> telefono, Nullable<System.DateTime> fechaIngreso, Nullable<decimal> salarioBase)
        {
            var idColaboradorParameter = idColaborador.HasValue ?
                new ObjectParameter("idColaborador", idColaborador) :
                new ObjectParameter("idColaborador", typeof(int));
    
            var cedulaParameter = cedula.HasValue ?
                new ObjectParameter("cedula", cedula) :
                new ObjectParameter("cedula", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var primer_ApellidoParameter = primer_Apellido != null ?
                new ObjectParameter("Primer_Apellido", primer_Apellido) :
                new ObjectParameter("Primer_Apellido", typeof(string));
    
            var segundo_ApellidoParameter = segundo_Apellido != null ?
                new ObjectParameter("Segundo_Apellido", segundo_Apellido) :
                new ObjectParameter("Segundo_Apellido", typeof(string));
    
            var generoParameter = genero != null ?
                new ObjectParameter("Genero", genero) :
                new ObjectParameter("Genero", typeof(string));
    
            var correoElectronicoParameter = correoElectronico != null ?
                new ObjectParameter("CorreoElectronico", correoElectronico) :
                new ObjectParameter("CorreoElectronico", typeof(string));
    
            var direccionFisicaParameter = direccionFisica != null ?
                new ObjectParameter("direccionFisica", direccionFisica) :
                new ObjectParameter("direccionFisica", typeof(string));
    
            var telefonoParameter = telefono.HasValue ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(decimal));
    
            var fechaIngresoParameter = fechaIngreso.HasValue ?
                new ObjectParameter("FechaIngreso", fechaIngreso) :
                new ObjectParameter("FechaIngreso", typeof(System.DateTime));
    
            var salarioBaseParameter = salarioBase.HasValue ?
                new ObjectParameter("SalarioBase", salarioBase) :
                new ObjectParameter("SalarioBase", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ColaboradorModifica", idColaboradorParameter, cedulaParameter, nombreParameter, primer_ApellidoParameter, segundo_ApellidoParameter, generoParameter, correoElectronicoParameter, direccionFisicaParameter, telefonoParameter, fechaIngresoParameter, salarioBaseParameter);
        }
    
        public virtual ObjectResult<sp_ColaboradorRetorna_Result> sp_ColaboradorRetorna(string primerApellido, string segundoApellido, string nombre)
        {
            var primerApellidoParameter = primerApellido != null ?
                new ObjectParameter("primerApellido", primerApellido) :
                new ObjectParameter("primerApellido", typeof(string));
    
            var segundoApellidoParameter = segundoApellido != null ?
                new ObjectParameter("segundoApellido", segundoApellido) :
                new ObjectParameter("segundoApellido", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ColaboradorRetorna_Result>("sp_ColaboradorRetorna", primerApellidoParameter, segundoApellidoParameter, nombreParameter);
        }
    
        public virtual ObjectResult<sp_ColaboradorRetornaID_Result> sp_ColaboradorRetornaID(Nullable<int> idColaborador)
        {
            var idColaboradorParameter = idColaborador.HasValue ?
                new ObjectParameter("idColaborador", idColaborador) :
                new ObjectParameter("idColaborador", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ColaboradorRetornaID_Result>("sp_ColaboradorRetornaID", idColaboradorParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual ObjectResult<sp_RetornaEmpleado_Result> sp_RetornaEmpleado()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_RetornaEmpleado_Result>("sp_RetornaEmpleado");
        }
    
        public virtual ObjectResult<sp_RetornaEmpleadoSalario_Result> sp_RetornaEmpleadoSalario(string primerApellido, string segundoApellido, string nombre, string fechaPago)
        {
            var primerApellidoParameter = primerApellido != null ?
                new ObjectParameter("primerApellido", primerApellido) :
                new ObjectParameter("primerApellido", typeof(string));
    
            var segundoApellidoParameter = segundoApellido != null ?
                new ObjectParameter("segundoApellido", segundoApellido) :
                new ObjectParameter("segundoApellido", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var fechaPagoParameter = fechaPago != null ?
                new ObjectParameter("fechaPago", fechaPago) :
                new ObjectParameter("fechaPago", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_RetornaEmpleadoSalario_Result>("sp_RetornaEmpleadoSalario", primerApellidoParameter, segundoApellidoParameter, nombreParameter, fechaPagoParameter);
        }
    
        public virtual ObjectResult<sp_RetornaEmpleadoSalarioID_Result> sp_RetornaEmpleadoSalarioID(Nullable<int> idRegistro)
        {
            var idRegistroParameter = idRegistro.HasValue ?
                new ObjectParameter("idRegistro", idRegistro) :
                new ObjectParameter("idRegistro", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_RetornaEmpleadoSalarioID_Result>("sp_RetornaEmpleadoSalarioID", idRegistroParameter);
        }
    
        public virtual ObjectResult<sp_retornaSalario_Result> sp_retornaSalario(Nullable<int> idColaborador)
        {
            var idColaboradorParameter = idColaborador.HasValue ?
                new ObjectParameter("idColaborador", idColaborador) :
                new ObjectParameter("idColaborador", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_retornaSalario_Result>("sp_retornaSalario", idColaboradorParameter);
        }
    
        public virtual ObjectResult<sp_RetornaUsuarioCorreoPwd_Result> sp_RetornaUsuarioCorreoPwd(string correoElectronico, string contrasena)
        {
            var correoElectronicoParameter = correoElectronico != null ?
                new ObjectParameter("correoElectronico", correoElectronico) :
                new ObjectParameter("correoElectronico", typeof(string));
    
            var contrasenaParameter = contrasena != null ?
                new ObjectParameter("contrasena", contrasena) :
                new ObjectParameter("contrasena", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_RetornaUsuarioCorreoPwd_Result>("sp_RetornaUsuarioCorreoPwd", correoElectronicoParameter, contrasenaParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int sp_UsuarioElimina(Nullable<int> id_Usuario)
        {
            var id_UsuarioParameter = id_Usuario.HasValue ?
                new ObjectParameter("id_Usuario", id_Usuario) :
                new ObjectParameter("id_Usuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UsuarioElimina", id_UsuarioParameter);
        }
    
        public virtual int sp_UsuarioInserta(string nombreCompleto, string correoElectronico, string contrasena, string tipoUsuario)
        {
            var nombreCompletoParameter = nombreCompleto != null ?
                new ObjectParameter("nombreCompleto", nombreCompleto) :
                new ObjectParameter("nombreCompleto", typeof(string));
    
            var correoElectronicoParameter = correoElectronico != null ?
                new ObjectParameter("correoElectronico", correoElectronico) :
                new ObjectParameter("correoElectronico", typeof(string));
    
            var contrasenaParameter = contrasena != null ?
                new ObjectParameter("contrasena", contrasena) :
                new ObjectParameter("contrasena", typeof(string));
    
            var tipoUsuarioParameter = tipoUsuario != null ?
                new ObjectParameter("tipoUsuario", tipoUsuario) :
                new ObjectParameter("tipoUsuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UsuarioInserta", nombreCompletoParameter, correoElectronicoParameter, contrasenaParameter, tipoUsuarioParameter);
        }
    
        public virtual int sp_UsuarioModifica(Nullable<int> id_Usuario, string nombreCompleto, string correoElectronico, string tipoUsuario)
        {
            var id_UsuarioParameter = id_Usuario.HasValue ?
                new ObjectParameter("id_Usuario", id_Usuario) :
                new ObjectParameter("id_Usuario", typeof(int));
    
            var nombreCompletoParameter = nombreCompleto != null ?
                new ObjectParameter("nombreCompleto", nombreCompleto) :
                new ObjectParameter("nombreCompleto", typeof(string));
    
            var correoElectronicoParameter = correoElectronico != null ?
                new ObjectParameter("correoElectronico", correoElectronico) :
                new ObjectParameter("correoElectronico", typeof(string));
    
            var tipoUsuarioParameter = tipoUsuario != null ?
                new ObjectParameter("tipoUsuario", tipoUsuario) :
                new ObjectParameter("tipoUsuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UsuarioModifica", id_UsuarioParameter, nombreCompletoParameter, correoElectronicoParameter, tipoUsuarioParameter);
        }
    
        public virtual ObjectResult<sp_UsuarioRetorna_Result> sp_UsuarioRetorna()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_UsuarioRetorna_Result>("sp_UsuarioRetorna");
        }
    
        public virtual ObjectResult<sp_UsuarioRetornaID_Result> sp_UsuarioRetornaID(Nullable<int> id_Usuario)
        {
            var id_UsuarioParameter = id_Usuario.HasValue ?
                new ObjectParameter("id_Usuario", id_Usuario) :
                new ObjectParameter("id_Usuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_UsuarioRetornaID_Result>("sp_UsuarioRetornaID", id_UsuarioParameter);
        }
    }
}
